name: qa_calling
run-name: qa_calling

on:
  # schedule:
  workflow_dispatch:

  workflow_call:

  # pull_request:
  #   types:
  #     - closed
  #   branches:
  #     - 'main'
  #   paths:
  #     - source/*
  #     - .github/workflows/reusable.yml
  #     - .github/workflows/*_calling.yml


# permissions:
#   contents: read
#   actions: read

# env:
#   check_workflow_name: dev_calling

jobs:
  # check-dev-deployment:
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
      
  #     - name: Check Status
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       shell: pwsh
  #       run: |
  #         $json_output  = gh run list -w "${{ env.check_workflow_name }}" --json createdAt,name,displayTitle,event,headSha,status,conclusion
  #         $final_output = $json_output | ConvertFrom-Json | Sort-object -Property CreatedAt -Descending
  #         $matching_sha = $final_output | where-object { $_.event -eq 'pull_request' -and $_.headSha -eq "${{ github.event.pull_request.head.sha }}" }
          
  #         Write-Output "Pull request Head SHA:  "
  #         write-output "${{ github.event.pull_request.head.sha }}"

  #         if ( $matching_sha.conclusion -eq "success" ) {
  #           write-output "Found successful `'${{ env.check_workflow_name }}`' deployment with matching Head SHA:  $($matching_sha.headSha)"
  #           exit 0
  #         }
  #         else {
  #           write-output "Could not find successful `'${{ env.check_workflow_name }}`' deployment with matching Head SHA:  ${{ github.event.pull_request.head.sha }}"
  #           $final_output | ft
  #           exit 1
  #         }

  call-reusable-workflow:
    uses: ./.github/workflows/reusable.yml
    with:
      environment: qa
      message: this is the QA deployment
