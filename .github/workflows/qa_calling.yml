name: qa_calling
run-name: qa_calling

on:
  # schedule:
  #   - cron: "0 0,4,8,12,16,20 * * *"
  
  workflow_dispatch: # call on-demand

  pull_request:
    branches:
      - 'staging'
    paths:
      - source/**
      - .github/workflows/reusable.yml
      - .github/workflows/*_calling.yml


permissions:
  contents: read
  actions: read
  pull-requests: write


env:
  WAIT_WORKFLOW_FLOW: dev_calling.yml

jobs:
  # check-dev-deployment:    ### IF WE'RE GOING TO DO THIS, NEED TO HAVE A 'WAIT FOR DEV' STEP FIRST
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo   uses: actions/checkout@v4
  #     - name: Check Status
  #       env:  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       shell: pwsh  run: |
  #         $json_output  = gh run list -w "${{ env.check_workflow_name }}" --json createdAt,name,displayTitle,event,headSha,status,conclusion
  #         $final_output = $json_output | ConvertFrom-Json | Sort-object -Property CreatedAt -Descending
  #         $matching_sha = $final_output | where-object { $_.event -eq 'pull_request' -and $_.headSha -eq "${{ github.event.pull_request.head.sha }}" }
  #         Write-Output "Pull request Head SHA:  "
  #         write-output "${{ github.event.pull_request.head.sha }}"

  #         if ( $matching_sha.conclusion -eq "success" ) {
  #           write-output "Found successful `'${{ env.check_workflow_name }}`' deployment with matching Head SHA:  $($matching_sha.headSha)"
  #           exit 0
  #         }
  #         else {
  #           write-output "Could not find successful `'${{ env.check_workflow_name }}`' deployment with matching Head SHA:  ${{ github.event.pull_request.head.sha }}"
  #           $final_output | ft
  #           exit 1
  #         }

  # Give dev workflow a chance to start
  # Wait for dev workflow to complete
  wait:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Sleep
        shell: bash
        run: sleep 10s

      - name: WAIT
        uses: codex-/await-local-workflow-run@v1
        with:
          token: ${{ github.token }} # The standard action GitHub token should be enough to poll the local workflows.
          workflow: ${{ env.WAIT_WORKFLOW_FLOW }}
          timeout_mins: 15
          poll_interval_ms: 3000


  call-workflow:
    uses: ./.github/workflows/reusable.yml
    needs: wait
    with:
      environment: qa
      message: this is the QA deployment


  # Get dependent jobs...
  ### Get dev deployment run...
  ### get QA deployment run...
  ### add info to PR...
  create-main-pr:
    needs: [wait, call-workflow]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          gh pr create --base main --head staging --title "Staged Changes for Prod Merge" --body "Auto-deploying updates:
            head_ref:  ${{ github.head_ref }}
            actor:     ${{ github.actor }}"
            ## Get most recent two 
          