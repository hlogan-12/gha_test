#
# This is intended to automatically trigger a PR from staging to main when a staging PR is closed
#

name: create_main_pr

run-name: create_main_pr

on:
  pull_request: # run when a PR is merged/closed...?
    types:
      - closed
    branches:
      - 'staging'

permissions:
  contents: write
  pull-requests: write

jobs:
  submit-pr:
    # if the pull request was MERGED
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create pull request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          # Check if a pull request already exists and exit/succeed if it does
          $existing = gh pr ls --head "${{ github.base_ref }}" --base main --json title | ConvertFrom-Json
          if( $existing ) {
            write-output "Pull request already exists and will be auto-updated with changes to '${{ github.base_ref}}'"
            exit 0
          }

          write-output "Creating pull request..."

          # if feature branch had 'no_deploy', add it to title of this new PR, so won't auto-run prod env deployment
          $title = $("${{ github.head_ref }}" -match "no_deploy" ? "[NO_DEPLOY] " : "") + "${{ github.head_ref }} -> ${{ github.base_ref }} -- auto pull request"
          
          # Tell user to review appropriate environment deployments...
          $actions_url = "https://github.com/" + "${{ github.repository }}" + "/actions"
          $review_reminder = "If applicable, review the appropriate deployments and ensure they succeeded: `n$($actions_url)"

          # get 'CHG' all unqiue 'chg' ticket numbers and format into a comma separated string
          $closed_pr_content = "${{ github.event.pull_request.title }}" + "${{ github.event.pull_request.body }}"
          $CHG_tickets       = (($closed_pr_content | select-string -Pattern 'chg\d{7}' -AllMatches).matches.value | sort-object -unique) -join ', '

          # create pull request
          gh pr create --base main --head '${{ github.base_ref }}' --title $title --body "Pull Request Details: `n
            Change ticket(s):  $($CHG_tickets)
            head_ref:  ${{ github.head_ref }}
            sha: ${{ github.sha }}
            actor: ${{ github.actor }}
            workflow_sha: ${{ github.workflow_sha }}
            
            $review_reminder"